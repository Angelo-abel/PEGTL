language: generic
os: linux
dist: xenial

matrix:
  include:
    - compiler: gcc
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-7']
      env:
        - CXX=g++-7

    - compiler: gcc
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-8']
      env:
        - CXX=g++-8

    - compiler: gcc
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-8']
      env:
        - CXX=g++-8
        - CPPFLAGS=-fno-rtti

    - compiler: gcc
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-9']
      env:
        - CXX=g++-9

    - compiler: clang
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test', 'llvm-toolchain-xenial-5']
          packages: ['clang-5.0', 'g++-7']
      env:
        - CXX=clang++-5.0

    - compiler: clang
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test', 'llvm-toolchain-xenial-6']
          packages: ['clang-6.0', 'g++-7']
      env:
        - CXX=clang++-6.0

    - compiler: clang
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test', 'llvm-toolchain-xenial-7']
          packages: ['clang-7', 'g++-7']
      env:
        - CXX=clang++-7

    - compiler: clang
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test', 'llvm-toolchain-xenial-8']
          packages: ['clang-8', 'g++-8']
      env:
        - CXX=clang++-8

    - compiler: clang
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test', 'llvm-toolchain-xenial-8']
          packages: ['clang-8', 'g++-8']
      env:
        - CXX=clang++-8
        - CPPFLAGS=-fms-extensions

    - compiler: clang
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test', 'llvm-toolchain-xenial-8']
          packages: ['clang-8', 'g++-8']
      env:
        - CXX=clang++-8
        - CPPFLAGS=-fno-rtti

    - os: osx
      osx_image: xcode9.4
      compiler: clang
      env:
        - CXX=clang++

    - os: osx
      osx_image: xcode10.2
      compiler: clang
      env:
        - CXX=clang++

    - compiler: gcc
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-9']
      env:
        - CXX=g++-9
        - CPPFLAGS="-fsanitize=undefined -fuse-ld=gold"

    - compiler: gcc
      sudo: true
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-9']
      env:
        - CXX=g++-9
        - CPPFLAGS="-fsanitize=address -fuse-ld=gold"

    - compiler: clang
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test', 'llvm-toolchain-xenial-8']
          packages: ['clang-8', 'g++-8']
      env:
        - CXX=clang++-8
        - CPPFLAGS=-fsanitize=undefined

    - compiler: clang
      sudo: true
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test', 'llvm-toolchain-xenial-8']
          packages: ['clang-8', 'g++-8']
      env:
        - CXX=clang++-8
        - CPPFLAGS=-fsanitize=address

    - compiler: clang
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test', 'llvm-toolchain-xenial-8']
          packages: ['clang-8', 'clang-tidy-8', 'g++-8']
      env:
        - CXX=clang++-8
        - CLANG_TIDY=clang-tidy-8
      script:
        - "sed -i 's#namespace TAO_PEGTL_NAMESPACE#namespace tao::pegtl#g' $(find . -name '*.[hc]pp')"
        - make -kj3 clang-tidy

    - compiler: clang
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test', 'llvm-toolchain-xenial-8']
          packages: ['clang-8', 'clang-tools-8', 'g++-8']
      script:
        - scan-build-8 --use-c++=clang++-8 --status-bugs make -kj3

    - compiler: gcc
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-9', 'valgrind']
      env:
        - CXX=g++-9
        - SPECIAL=valgrind
      script:
        - make -kj3 valgrind

    - compiler: gcc
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-9']
      env:
        - CXX=g++-9
        - CXXFLAGS="-O0 --coverage"
      before_script:
        - pip install --user cpp-coveralls
      script:
        - make -kj3 check
        - coveralls --gcov gcov-9 --gcov-options '\-lp' --exclude src

    - language: python
      python:
        - "3.6"
      sudo: required
      install:
        - pip install conan conan-package-tools
      env:
        - CONAN_GCC_VERSIONS=7
        - CONAN_DOCKER_IMAGE=lasote/conangcc7
      script:
        - python .conan/build.py

script:
  - $CXX --version
  - make -j3 build/src/test/pegtl/tester
  - build/src/test/pegtl/tester
  - make -kj3
